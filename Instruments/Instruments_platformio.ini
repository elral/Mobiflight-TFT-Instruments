; ******************************************************************************************
; working environment for template of custom firmware
; ******************************************************************************************
; Common build settings across this custom device
[env_instruments]
build_flags =
	${env.build_flags}												; include standard build flags
	-DMF_CUSTOMDEVICE_SUPPORT=1										; Required for Custom Devices
	-DMF_CUSTOMDEVICE_HAS_UPDATE									; if the custom device needs to be updated, uncomment this. W/o the following define it will be done each loop()
	;-DMF_CUSTOMDEVICE_POLL_MS=10 									; time in ms between updating custom device, uncomment this if custom device needs to be updated regulary
	;-DHAS_CONFIG_IN_FLASH											; undefine this and add your configuration to MFCustomDevicesConfig.h to save the config in Flash !!Core FW version must be at least 2.5.2!!
	-I./src/src/MF_CustomDevice										; don't change this one!
	-I./Instruments													; Include files for your custom device, replace "Template" by your folder name
build_src_filter = 
	+<../Instruments>												; build files for your custom device, replace "Template" by your folder name
lib_deps =															; You can add additional libraries if required
	https://github.com/Bodmer/TFT_eSPI.git
custom_core_firmware_version = ESP32_support	; CAUTION check get_version.py and get_CoreFiles.py							; define the version from the core firmware files your build should base on
custom_source_folder = Instruments									; path to your Custom Device Sources, replace "Template" by your folder name
custom_community_project = saves_tft_instruments					; name of the ZIP file, revision will be added during build process
custom_community_folder = saves_tft									; Folder name inside zip file


[env:instruments_all_esp32]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
lib_ldf_mode = deep+
build_flags =
	${env_instruments.build_flags}
	-DMF_MAX_DEVICEMEM=2000
	;-DUSE_2ND_CORE
	-I./src/_Boards/ESP32/ESP32S3_Devkit
	'-DMOBIFLIGHT_TYPE="Saves Instruments ESP32-S3"'				; this must match with "MobiFlightType" within the .json file
	'-DMOBIFLIGHT_NAME="Saves Instruments ESP32-S3"'
	-DBUFFER_LENGTH=I2C_BUFFER_LENGTH
	; Definitions for TFT display
	-D USER_SETUP_LOADED=1
	-D ST7796_DRIVER=1
	-D TFT_MOSI=17
	-D TFT_SCLK=18
	-D TFT_CS=7
	-D TFT_DC=15
	-D TFT_RST=6
	-D LOAD_GLCD=1
    -D LOAD_FONT2=1
    -D LOAD_FONT4=1
    -D LOAD_FONT6=1
    -D LOAD_FONT7=1
    -D LOAD_FONT8=1
    -D LOAD_GFXFF=1
    -D SMOOTH_FONT=1
	-D SPI_FREQUENCY=80000000
	-D TFT_RGB_ORDER=TFT_BGR
    -D TFT_INVERSION_OFF
	-D USE_HSPI_PORT
	; which instrument to be included
	-DUSE_STANDBY_ATTITUDE_MODULE
	-DUSE_AIRSPEED_INDICATOR
	-DUSE_ATTITUDE_INDICATOR
	-DUSE_TURNCOORDINATOR
	-DUSE_ALTIMETER
	-DUSE_VERTICAL_SPEED_INDICATOR
	-DUSE_HEADING_INDICATOR
	; inject board parameters for n16r8v
	-DBOARD_HAS_PSRAM
	-DARDUINO_USB_CDC_ON_BOOT=1
	;-DARDUINO_USB_MODE=1	; is already part of esp32-s3-devkitc-1.json
build_unflags =
  	-Wdeprecated-declarations
;   -Werror=return-type
build_src_filter =
  ${env.build_src_filter}
  ${env_instruments.build_src_filter}
lib_deps =
	${env.lib_deps}
	${env.custom_lib_deps_ESP32}
	${env_instruments.lib_deps}
; inject board parameters for n16r8v
board_build.arduino.memory_type = qio_opi
board_build.flash_mode = qio
board_build.psram_type = opi
board_build.partitions = default_16MB.csv
board_upload.flash_size = 16MB
board_upload.maximum_size = 16777216
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}
custom_core_firmware_version = ${env_instruments.custom_core_firmware_version}	; don't change this one!
custom_community_project = ${env_instruments.custom_community_project}			; don't change this one!
custom_source_folder = ${env_instruments.custom_source_folder}					; don't change this one!
custom_community_folder = ${env_instruments.custom_community_folder}			; don't change this one!


[env:instruments_all_pico2]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = rpipico2	; generic_rp2350B	; challenger_2350_wifi6_ble5	; rpipico2
framework = arduino
board_build.core = earlephilhower						; select new core
board_build.filesystem_size = 0M						; configure filesystem size. Default 0 Mbyte.
lib_ldf_mode = chain+
;upload_protocol = mbed									; for debugging upoading can be changed to picoprobe
;debug_tool = picoprobe									; and uncomment this for debugging w/ picoprobe
build_flags =
	${env_instruments.build_flags}
	-DMF_MAX_DEVICEMEM=2000
	;-DUSE_2ND_CORE
	-I./src/_Boards/RaspberryPi/Pico
	'-DMOBIFLIGHT_TYPE="Saves Instruments Pico2"'				; this must match with "MobiFlightType" within the .json file
	'-DMOBIFLIGHT_NAME="Saves Instruments Pico2"'
	-DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
    ;-DBOARD_HAS_PSRAM
	; Definitions for TFT display
	-D USER_SETUP_LOADED=1
	-D ST7796_DRIVER=1
	-D TFT_MOSI=19
	-D TFT_SCLK=18
	-D TFT_CS=17
	-D TFT_DC=20
	-D TFT_RST=21
	-D LOAD_GLCD=1
    -D LOAD_FONT2=1
    -D LOAD_FONT4=1
    -D LOAD_FONT6=1
    -D LOAD_FONT7=1
    -D LOAD_FONT8=1
    -D LOAD_GFXFF=1
    -D SMOOTH_FONT=1
	-D SPI_FREQUENCY=80000000
	-D TFT_RGB_ORDER=TFT_BGR
    -D TFT_INVERSION_OFF
	; which instrument to be included
	-DUSE_STANDBY_ATTITUDE_MODULE
	-DUSE_AIRSPEED_INDICATOR
	-DUSE_ATTITUDE_INDICATOR
	-DUSE_TURNCOORDINATOR
	-DUSE_ALTIMETER
	-DUSE_VERTICAL_SPEED_INDICATOR
	-DUSE_HEADING_INDICATOR
build_unflags =
  -Wdeprecated-declarations
;  -Werror=return-type
build_src_filter =
  ${env.build_src_filter}
  ${env_instruments.build_src_filter}
lib_deps =
	${env.lib_deps}
	${env.custom_lib_deps_Pico}
	${env_instruments.lib_deps}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}
custom_core_firmware_version = ${env_instruments.custom_core_firmware_version}	; don't change this one!
custom_community_project = ${env_instruments.custom_community_project}			; don't change this one!
custom_source_folder = ${env_instruments.custom_source_folder}					; don't change this one!
custom_community_folder = ${env_instruments.custom_community_folder}			; don't change this one!

[env:instruments_all_pico2B_generic]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = generic_rp2350B
framework = arduino
board_build.core = earlephilhower						; select new core
board_build.filesystem_size = 0M						; configure filesystem size. Default 0 Mbyte.
lib_ldf_mode = chain+
;upload_protocol = mbed									; for debugging upoading can be changed to picoprobe
;debug_tool = picoprobe									; and uncomment this for debugging w/ picoprobe
build_flags =
	${env_instruments.build_flags}
	-DMF_MAX_DEVICEMEM=2000
	;-DUSE_2ND_CORE
	-I./src/_Boards/RaspberryPi/Pico
	'-DMOBIFLIGHT_TYPE="Saves Instruments Pico2B generic"'				; this must match with "MobiFlightType" within the .json file
	'-DMOBIFLIGHT_NAME="Saves Instruments Pico2B generic"'
	-DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DBOARD_HAS_PSRAM
	-D PIN_SPI1_MISO=16
	-D PIN_SPI1_MOSI=19
	-D PIN_SPI1_SCK=18
	-D PIN_SPI1_SS=17
	-D PIN_LED=25
	-D PIN_WIRE0_SDA=4
	-D PIN_WIRE0_SCL=5
	; Definitions for TFT display
	-D USER_SETUP_LOADED=1
	-D ST7796_DRIVER=1
	-D TFT_MOSI=19
	-D TFT_SCLK=18
	-D TFT_CS=17
	-D TFT_DC=20
	-D TFT_RST=21
	-D LOAD_GLCD=1
    -D LOAD_FONT2=1
    -D LOAD_FONT4=1
    -D LOAD_FONT6=1
    -D LOAD_FONT7=1
    -D LOAD_FONT8=1
    -D LOAD_GFXFF=1
    -D SMOOTH_FONT=1
	-D SPI_FREQUENCY=80000000
	-D TFT_RGB_ORDER=TFT_BGR
    -D TFT_INVERSION_OFF
	; which instrument to be included
	-DUSE_STANDBY_ATTITUDE_MODULE
	-DUSE_AIRSPEED_INDICATOR
	-DUSE_ATTITUDE_INDICATOR
	-DUSE_TURNCOORDINATOR
	-DUSE_ALTIMETER
	-DUSE_VERTICAL_SPEED_INDICATOR
	-DUSE_HEADING_INDICATOR
build_unflags =
  -Wdeprecated-declarations
;  -Werror=return-type
build_src_filter =
  ${env.build_src_filter}
  ${env_instruments.build_src_filter}
lib_deps =
	${env.lib_deps}
	${env.custom_lib_deps_Pico}
	${env_instruments.lib_deps}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}
custom_core_firmware_version = ${env_instruments.custom_core_firmware_version}	; don't change this one!
custom_community_project = ${env_instruments.custom_community_project}			; don't change this one!
custom_source_folder = ${env_instruments.custom_source_folder}					; don't change this one!
custom_community_folder = ${env_instruments.custom_community_folder}			; don't change this one!
